markdown标题我们采用“#” 的形式来定义一二三级标题，例如
  # 一级标题
  ## 二级标题
  ### 三级标题
  同时支持标题的嵌套，而且需要遵循层级规范，例如
    # 引言
    ## 背景
    ## 目标
    # 方法论
    ## 数据收集
    ## 分析方法
--------------------------------------------------------------------------------------------------------

markdown文本格式：我们采用[ * ] | [ _ ] 的组合来实现加粗，斜体，斜体加粗等功能，例如
  *斜体*
  _斜体_
  **粗体**
  __粗体__
  ***粗斜体***
  ___粗斜体___
  总结就是单个 * 和单个 _ 包围就是斜体
  两个就是粗体
  三个就是斜粗体
  
  另外如果只有三个或以上的 [ * ] or [ _ ] 就是生成分割线
  and 被 [ ~~~~ ] 四个波浪线包围就是 删除线，在字体上生成一条线，例如
    ~~删除线~~
    
  另外使用HTML里面的 [ <u></u> ]:就是生成下划线，例如
    <u>下划线</u>

  还有对于注脚的设置，采用 [ [^自定义标识] ] 的形式完成
    要创建注脚的文本(需要做补充说明的文字) [^mark]
    [^mark]: 对于注脚文本一级补充的解释

----------------------------------------------------------------------------------------------------------

markdown：代码标记
采用 [ `` ]来包围需要高亮的代码、例如
    使用 `Django` 书写 `python` 网页
    采用 `Django` 的 `modelform` 来创建网页的输入 

  文本高亮，采用：[ ==== ] 的形式或者HTML替代方案，例如
    ==高亮文本==
    <mark>高亮文本</mark>

-----------------------------------------------------------------------------------------------------

markdown：列表,采用 [ * ] [ + ] [ - ]
  * 第一项
  * 第二项
  * 第三项
  
  + 第一项
  + 第二项
  
  - 第一项
  - 第二项
  层级显示写法：
      1. 主要任务
         - 子任务A
         - 子任务B
           1. 详细步骤1
           2. 详细步骤2
         - 子任务C
    2. 次要任务

  有序列表嵌套：
    1. 准备阶段
       1. 收集资料
       2. 制定计划
    2. 执行阶段
       1. 开始实施
       2. 监控进度
    3. 总结阶段

  复选列表
    - [ ] 未完成的任务
    - [x] 已完成的任务
    - [ ] 另一个未完成的任务
    - [ ] 剩余任务

    > 单行引用框符号

----------------------------------------------------------------------------------------------------
markdown引用块
  >层级引用块
  >第一层
  >>第二层
  >>>第三层

  多层引用
    > 这是一个长引用，
    包含多行内容，
    只需要在第一行使用 >

  > 区块中使用列表
  > 1. 第一项
  > 2. 第二项
  > + 第一项
  > + 第二项
  > + 第三项

    
